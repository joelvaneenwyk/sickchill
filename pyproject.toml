[tool.poetry]
name = "sickchill"
version = "2023.6.27"
description = 'Automatic Video Library Manager for TV Shows'
license = "GPL-3.0-or-later"

authors = [
    "Dustyn Gibson <miigotu@gmail.com>",
    "BKSteve <stephen.rieger@gmail.com>",
]

maintainers = ["Dustyn Gibson <miigotu@gmail.com>"]

readme = "README.md"

repository = "https://github.com/joelvaneenwyk/sickchill"
homepage = "https://sickchill.github.io"

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Topic :: Multimedia :: Video",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

packages = [
    { include = "sickchill" },
    { include = "SickChill.py" },
    { include = "frontend" },
]

[tool.poetry.urls]
"Changelog" = "https://raw.githubusercontent.com/joelvaneenwyk/sickchill.github.io/main/sickchill-news/CHANGES.md"
"Bug Tracker" = "https://github.com/joelvaneenwyk/sickchill/issues"
"News" = "https://raw.githubusercontent.com/joelvaneenwyk/sickchill.github.io/main/sickchill-news/news.md"
"Discord" = "https://discord.com/invite/U8WPBdf"
"IRC" = "https://webchat.freenode.net/?channels=#sickchill"
"Donate" = "https://github.com/joelvaneenwyk/SickChill/wiki/Donations"

[tool.poetry.scripts]
SickChill = "SickChill:main"
sickchill = "SickChill:main"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = ">=22.8,<24.0"
coveralls = "^3.3.1"
mock = ">=4.0.3,<6.0.0"
Babel = "^2.9.0"
pytest-cov = ">=3,<5"
pytest-isort = "^3.0.0"
codecov = "^2.1.12"
pytest = "^7.0.1"
isort = "^5.10.1"
poethepoet = ">=0.16,<0.25"
po2json = "^0.2.2"
pre-commit = ">=2.20,<4.0"
importlib-metadata = ">=5.0"
pylint = ">=2.11.1,<4.0.0"
ruff = "^0.1.0"

[tool.poetry.group.speedups]
optional = true

[tool.poetry.group.speedups.dependencies]
html5lib = "^1.1"
lxml = ">=4.9.1,<6.0.0"
Js2Py = ">=0.71,<0.75"
pymediainfo = ">=5.0.3,<7.0.0"

[tool.poetry.group.types]
optional = true

[tool.poetry.group.types.dependencies]
types-attrs = "^19.1.0"
types-pyOpenSSL = ">=22.0.10,<24.0.0"
types-python-dateutil = "^2.8.19"
types-python-slugify = ">=6.1,<9.0"
types-requests = "^2.28.11"
types-chardet = "^5.0.4"
types-pytz = ">=2022.2.1,<2024.0.0"
types-setuptools = ">=65.3,<70.0"
types-six = "^1.16.20"

[tool.poetry.group.experimental]
optional = true

[tool.poetry.group.experimental.dependencies]
pyaes = "^1.6.1"

[tool.poetry.group.frontend]
optional = true

[tool.poetry.group.frontend.dependencies]
Flask = ">=2.2.2,<4.0.0"
urllib3 = "<3.0.0"
flask-sqlalchemy = "^3.0.3"

[tool.poetry.extras]
experimental = ["experimental"]
speedups = ["speedups"]
types = ["types"]
frontend = ["frontend"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fixable = ["E", "F", "I"]
line-length = 160
show-source = true
builtins = ["_"]
exclude = [
    ".eggs",
    ".git",
    "__pycache__",
    "docs/source/conf.py",
    "build",
    "dist",
]
select = [
    "E",     # error
    "F",     # pyflakes
    "I",     # isort
    "W",     # warning
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "YTT",   # flake8-2020
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "G",     # flake8-logging-format
    "PIE",   # flake8-pie
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "SIM",   # flake8-simplify
    "TCH",   # flake8-type-checking
    "PTH",   # flake8-use-pathlib
    "PGH",   # pygrep-hooks
    "PERF",  # perflint
    "RUF",   # ruff-specific rules
]
ignore = [
    "C400",
    "C401",
    "C408", # unnecessary-collection-call
    "C414",
    "C416",
    "C419",
    # "C812",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D106",
    "D200",
    "D202",
    "D205",
    "D4",
    "D400",
    "D401",
    "D403",
    "D406",
    "D407",
    "E402",
    "E501",
    "E711",
    "E713",
    "E722",
    "E741",
    "F401",
    "F541",
    "F601",
    "F821",
    "F841",
    "G001",
    "G002",
    "G003",
    "G004",
    "I001",
    "N801",
    "N802",
    "N803",
    "N805",
    "N806",
    "N813",
    "N815",
    "N816",
    "N818",
    "N999",
    "PERF102",
    "PERF203",
    "PERF401",
    "PERF402",
    "PGH004",
    "PIE790",
    "PIE804",
    "PIE808",
    "PT004",
    "PT009",
    "PT011",
    "PT013",
    "PT015",   # pytest-assert-always-false
    "PT017",
    "PT027",
    "PTH100",
    "PTH101",
    "PTH102",
    "PTH103",
    "PTH104",
    "PTH106",
    "PTH107",
    "PTH108",
    "PTH109",  # os-getcwd
    "PTH110",
    "PTH112",
    "PTH113",
    "PTH114",
    "PTH116",
    "PTH117",
    "PTH118",
    "PTH119",
    "PTH120",
    "PTH122",
    "PTH123",  # builtin-open
    "PTH202",
    "PTH204",
    "PTH205",
    "PTH207",
    "PYI016",
    "PYI024",
    "RUF001",
    "RUF003",
    "RUF005",
    "RUF012",  # mutable-class-default
    "RUF013",
    "RUF015",
    "RUF100",
    "S101",
    "SIM102",
    "SIM103",
    "SIM105",
    "SIM108",
    "SIM110",
    "SIM112",
    "SIM114",
    "SIM115",
    "SIM117",
    "SIM118",  # in-dict-keys
    "SIM201",
    "SIM210",
    "SIM211",
    "SIM212",
    "SIM300",
    "TCH001",
    "TCH002",
    "UP004",
    "UP008",
    "UP015",
    "UP018",
    "UP024",
    "UP026",
    "UP028",
    "UP030",
    "UP031",
    "UP032",
    "UP034",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.pytest.ini_options]
testpaths = ["tests", "sickchill", "SickChill.py"]
addopts = "--cov=sickchill --cov-report xml --no-cov-on-fail"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 160
combine_as_imports = true
order_by_type = false
remove_imports = [
    "from __future__ import absolute_import",
    "from __future__ import print_function",
    "from __future__ import unicode_literals",
]
known_first_party = "sickchill"
extra_standard_library = ["posixpath", "ntpath"]
use_parentheses = true
src_paths = ["sickchill", "tests", "SickChill.py"]

[tool.black]
line-length = 160
target_version = ['py310']
include = '\.pyi?$'
exclude = 'contrib/scmaintools|\.venv|venv|\.git|\.hg|\.mypy_cache|\.tox|_build|buck-out|build|dist|node_modules|bower_components'

[tool.poe.executor]
type = "virtualenv"
location = ".venv"

[tool.poe.tasks]
pytest = "pytest"
xo = "xo"
ava = "ava"
python = "python"

_black = { cmd = "black . --check --diff", help = "Check code style using black" }
_isort = { cmd = "isort . --check-only --diff", help = "Check import order" }

ruff = { cmd = "ruff .", help = "Check code style using ruff" }
isort = { cmd = "isort .", help = "Fix import order" }
black = { cmd = "black .", help = "Reformat code using black" }

test_providers = { cmd = "pytest tests/sickchill_tests/providers/torrent/test_parsing.py", help = "Run provider tests" }
crowdin_upload = "crowdin-cli-py upload sources -c .github/crowdin.yml"
crowdin_download = "crowdin-cli-py download -c .github/crowdin.yml"
po2json = "po2json --format jed "
codecov = "codecov"

lint = ["_black", "_isort", "ruff"]
format = ["black", "isort", "ruff"]

_poetry_update = { shell = "poetry update", help = "update python dependencies" }
_yarn_upgrade = { cmd = "corepack yarn && corepack yarn run npm-check-updates -u", help = "update yarn dependencies" }
_add_locks = { shell = "git add pyproject.toml yarn.lock", help = "Add yarn and poetry lock files" }
depup = ["_poetry_update", "_yarn_upgrade", "_add_locks"]

update_translations = [
    "babel_extract",
    "babel_update",
    "crowdin_upload",
    "crowdin_download",
    "babel_compile",
    "po2json",
]
update_dependencies = { shell = "poetry update && yarn install && yarn run npm-check-updates -u && git add pyproject.toml yarn.lock" }

test = [{ ref = "lint" }, { cmd = "yarn test" }, { cmd = "pytest" }]

babel_extract = """
pybabel extract
--project=sickchill
--mapping-file=.github/babel-mapping.cfg
--width=80
--charset=utf-8
--output-file=sickchill/locale/messages.pot
--input-dirs=sickchill
--keywords=_n:1,2
--copyright-holder=SickChill
--msgid-bugs-address=miigotu@gmail.com
--add-comments="TRANSLATORS:"
--sort-output
"""

babel_compile = """
pybabel compile
--mapping-file=.github/babel-mapping.cfg
--directory=sickchill/locale
"""

babel_init = """
pybabel init
--mapping_file=.github/babel-mapping.cfg
--output-dir=sickchill/locale
--input-file=sickchill/locale/messages.pot
"""

babel_update = """
pybabel update
--output-dir=sickchill/locale
--input-file=sickchill/locale/messages.pot
--ignore-obsolete
--previous
"""

[tool.poe.tasks.yarn]
help = "Run yarn using corepack"
shell = "corepack yarn ${command}"
interpreter = ["posix", "pwsh"]
args = [
    { name = "command", positional = true, multiple = false, default = "install" },
]

[tool.poetry.dependencies]
python = ">=3.8.1,<4"
"bencode.py" = "^4.0.0"
configobj = "^5.0.6"
greenlet = { version = ">=2.0.0", allow-prereleases = true }
ipaddress = "^1.0.23"
jsonrpclib-pelix = "^0.4.2"
Mako = "^1.1.4"
markdown2 = "^2.4.0"
PyGithub = ">=1.54.1,<3.0.0"
pyOpenSSL = ">=20.0.1,<24.0.0"
python-dateutil = "^2.8.1"
python-twitter = "^3.5"
rarfile = "^4.0"
subliminal = "^2.1.0"
tmdbsimple = "^2.8.0"
tornado = "6.3.3"
tvdbsimple = "^1.0.6"
Unidecode = "^1.2.0"
validators = "0.21.0"
enzyme = "^0.4.1"
python3-fanart = "^2.0.0"
gntp = "^1.0.3"
"tus.py" = "^1.3.4"
win-inet-pton = "^1.1.0"
PyNMA = "^1.0"
"putio.py" = "^8.7.0"
profilehooks = "^1.12.0"
imagesize = "^1.2.0"
Send2Trash = { version = "^1.5.0", optional = true }
deluge-client = "^1.9.0"
ifaddr = ">=0.1.7,<0.3.0"
new-rtorrent-python = "^1.0.1-alpha.0"
qbittorrent-api = ">=2021.3.18,<2024.0.0"
packaging = ">=20.9,<24.0"
timeago = "^1.0.15"
SQLAlchemy = ">=2.0.0,<3.0.0"
python-slugify = ">=4.0.1,<9.0.0"
guessit = "^3.3.1"
requests = "^2.25.1"
cinemagoer = ">=2023.05.1"
babelfish = ">=0.6.0"
kodipydent-alt = ">=2022.9.3"
beekeeper-alt = ">=2022.9.3"

stevedore = "^5.1.0"
cachecontrol = "^0.13.1"
cacheyou = "^23.2"
poetry = "^1.7.1"
ruff = "^0.1.11"
